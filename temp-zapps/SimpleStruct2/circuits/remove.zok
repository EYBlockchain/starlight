from "./common/hashes/mimc/altbn254/mimc2.zok" import main as mimc2
from "hashes/sha256/sha256Padded.zok" import sha256Padded as sha256Padded
from "utils/casts/u32_8_to_bool_256.zok" import main as u32_8_to_bool_256
from "hashes/poseidon/poseidon.zok" import main as poseidon
from "utils/pack/bool/nonStrictUnpack256.zok" import main as field_to_bool_256
from "./common/casts/u32_array_to_field.zok" import main as u32_array_to_field
from "utils/pack/bool/pack256.zok" import main as bool_256_to_field
from "./common/merkle-tree/mimc/altbn254/verify-membership/height32.zok" import main as checkRoot

struct Rct {
        field amount
field tax
      }

def main(\
	private Rct invalidrct,\
	private field msg,\
	private u32[8] total_msg_0_oldCommitment_owner_secretKey,\
	private u32[8] total_msg_1_oldCommitment_owner_secretKey,\
	public field total_msg_0_oldCommitment_nullifier,\
	public field total_msg_1_oldCommitment_nullifier,\
	private  field total_msg_0_oldCommitment_value,\
	private field total_msg_0_oldCommitment_salt_field,\
	private  field total_msg_1_oldCommitment_value,\
	private field total_msg_1_oldCommitment_salt_field,\
	public field commitmentRoot,\
	private field total_msg_0_oldCommitment_membershipWitness_index,\
	private field[32] total_msg_0_oldCommitment_membershipWitness_siblingPath,\
	private field total_msg_1_oldCommitment_membershipWitness_index,\
	private field[32] total_msg_1_oldCommitment_membershipWitness_siblingPath,\
	private field total_msg_2_newCommitment_owner_publicKey_field,\
	private field total_msg_2_newCommitment_salt_field,\
	public field total_msg_2_newCommitment_commitment,\
	private u32[8] cmt_oldCommitment_owner_secretKey,\
	public field cmt_oldCommitment_nullifier,\
	private  Rct cmt_oldCommitment_value,\
	private field cmt_oldCommitment_salt_field,\
	private bool cmt_oldCommitment_isDummy,\
	private field cmt_oldCommitment_membershipWitness_index,\
	private field[32] cmt_oldCommitment_membershipWitness_siblingPath,\
	private field cmt_newCommitment_owner_publicKey_field,\
	private field cmt_newCommitment_salt_field,\
	public field cmt_newCommitment_commitment\
) -> (bool):

        
        // We need to hard-code the mappingId's of mappings into the circuit:
        field total_mappingId = 5


        field total_msg_0 = total_msg_0_oldCommitment_value


        field total_msg_1 = total_msg_1_oldCommitment_value


        // We need to hard-code each stateVarId into the circuit:
        field cmt_stateVarId_field = 13


        Rct cmt = cmt_oldCommitment_value

// Moved decrementation of total_msg

cmt.amount = 0

cmt.tax = 0


        field total_msg_0_stateVarId_field = mimc2([total_mappingId, msg])


        field total_msg_1_stateVarId_field = mimc2([total_mappingId, msg])


        field total_msg_2_stateVarId_field = mimc2([total_mappingId, msg])


        // total_msg_0_oldCommitment - PoKoSK:
        // The correctness of this secret key will be constrained within the oldCommitment existence check.

        u32[8] total_msg_0_oldCommitment_owner_publicKey = sha256Padded(u32_8_to_bool_256(total_msg_0_oldCommitment_owner_secretKey))


        // total_msg_1_oldCommitment - PoKoSK:
        // The correctness of this secret key will be constrained within the oldCommitment existence check.

        u32[8] total_msg_1_oldCommitment_owner_publicKey = sha256Padded(u32_8_to_bool_256(total_msg_1_oldCommitment_owner_secretKey))


        // Nullify total_msg_0:

        field total_msg_0_oldCommitment_owner_secretKey_field =u32_array_to_field(total_msg_0_oldCommitment_owner_secretKey)

        field total_msg_0_oldCommitment_nullifier_check_field = poseidon([\
          total_msg_0_stateVarId_field,\
          total_msg_0_oldCommitment_owner_secretKey_field,\
          total_msg_0_oldCommitment_salt_field\
        ])

        assert(\
        field_to_bool_256(total_msg_0_oldCommitment_nullifier)[8..256] == field_to_bool_256(total_msg_0_oldCommitment_nullifier_check_field)[8..256]\
        )


        // Nullify total_msg_1:

        field total_msg_1_oldCommitment_owner_secretKey_field =u32_array_to_field(total_msg_1_oldCommitment_owner_secretKey)

        field total_msg_1_oldCommitment_nullifier_check_field = poseidon([\
          total_msg_1_stateVarId_field,\
          total_msg_1_oldCommitment_owner_secretKey_field,\
          total_msg_1_oldCommitment_salt_field\
        ])

        assert(\
        field_to_bool_256(total_msg_1_oldCommitment_nullifier)[8..256] == field_to_bool_256(total_msg_1_oldCommitment_nullifier_check_field)[8..256]\
        )


        // total_msg_0_oldCommitment_commitment: preimage check

        field total_msg_0_oldCommitment_owner_publicKey_field =u32_array_to_field(total_msg_0_oldCommitment_owner_publicKey)


        field total_msg_0_oldCommitment_commitment_field = poseidon([\
          total_msg_0_stateVarId_field,\
          total_msg_0_oldCommitment_value,\
          total_msg_0_oldCommitment_owner_publicKey_field,\
          total_msg_0_oldCommitment_salt_field\
        ])


        // total_msg_1_oldCommitment_commitment: preimage check

        field total_msg_1_oldCommitment_owner_publicKey_field =u32_array_to_field(total_msg_1_oldCommitment_owner_publicKey)


        field total_msg_1_oldCommitment_commitment_field = poseidon([\
          total_msg_1_stateVarId_field,\
          total_msg_1_oldCommitment_value,\
          total_msg_1_oldCommitment_owner_publicKey_field,\
          total_msg_1_oldCommitment_salt_field\
        ])


        // total_msg_0_oldCommitment_commitment: existence check


        field total_msg_0_commitmentRoot_check = checkRoot(\
          total_msg_0_oldCommitment_membershipWitness_siblingPath,\
          total_msg_0_oldCommitment_commitment_field,\
          total_msg_0_oldCommitment_membershipWitness_index\
        )


        assert(\
          field_to_bool_256(commitmentRoot)[8..256] == field_to_bool_256(total_msg_0_commitmentRoot_check)[8..256]\
        )


        // total_msg_1_oldCommitment_commitment: existence check


        field total_msg_1_commitmentRoot_check = checkRoot(\
          total_msg_1_oldCommitment_membershipWitness_siblingPath,\
          total_msg_1_oldCommitment_commitment_field,\
          total_msg_1_oldCommitment_membershipWitness_index\
        )


        assert(\
          field_to_bool_256(commitmentRoot)[8..256] == field_to_bool_256(total_msg_1_commitmentRoot_check)[8..256]\
        )


        // prepare secret state 'total_msg_2' for commitment

        assert(total_msg_0 + total_msg_1 > invalidrct.amount + invalidrct.tax)
            // TODO: assert no under/overflows

            field total_msg_2_newCommitment_value_field = (total_msg_0 + total_msg_1) - (invalidrct.amount + invalidrct.tax)

        // total_msg_2_newCommitment_commitment - preimage check

        field total_msg_2_newCommitment_commitment_check_field = poseidon([\
          total_msg_2_stateVarId_field,\
          total_msg_2_newCommitment_value_field,\
          total_msg_2_newCommitment_owner_publicKey_field,\
          total_msg_2_newCommitment_salt_field\
        ])

        assert(\
          field_to_bool_256(total_msg_2_newCommitment_commitment)[8..256] == field_to_bool_256(total_msg_2_newCommitment_commitment_check_field)[8..256]\
        )


        // cmt_oldCommitment - PoKoSK:
        // The correctness of this secret key will be constrained within the oldCommitment existence check.

        u32[8] cmt_oldCommitment_owner_publicKey = sha256Padded(u32_8_to_bool_256(cmt_oldCommitment_owner_secretKey))


        // Nullify cmt:

        field cmt_oldCommitment_owner_secretKey_field =u32_array_to_field(cmt_oldCommitment_owner_secretKey)

        field cmt_oldCommitment_nullifier_check_field = poseidon([\
          cmt_stateVarId_field,\
          cmt_oldCommitment_owner_secretKey_field,\
          cmt_oldCommitment_salt_field\
        ])

        assert(\
        field_to_bool_256(cmt_oldCommitment_nullifier)[8..256] == field_to_bool_256(cmt_oldCommitment_nullifier_check_field)[8..256]\
        )


          // cmt_oldCommitment_commitment: preimage check

          field cmt_oldCommitment_owner_publicKey_field =u32_array_to_field(cmt_oldCommitment_owner_publicKey)

          field cmt_oldCommitment_commitment_field = poseidon([\
            cmt_stateVarId_field,\
            	 cmt_oldCommitment_value.amount,\
	 cmt_oldCommitment_value.tax,\
            cmt_oldCommitment_owner_publicKey_field,\
            cmt_oldCommitment_salt_field\
          ])


        // cmt_oldCommitment_commitment: existence check


        field cmt_commitmentRoot_check = checkRoot(\
          cmt_oldCommitment_membershipWitness_siblingPath,\
          cmt_oldCommitment_commitment_field,\
          cmt_oldCommitment_membershipWitness_index\
        )


        // Note: Don't bother actually asserting existence, if the oldCommitment is a dummy:
        cmt_commitmentRoot_check = if cmt_oldCommitment_isDummy == true then commitmentRoot else cmt_commitmentRoot_check fi


        assert(\
          field_to_bool_256(commitmentRoot)[8..256] == field_to_bool_256(cmt_commitmentRoot_check)[8..256]\
        )


          // prepare secret state 'cmt' for commitment

          Rct cmt_newCommitment_value = Rct {  amount: cmt.amount, tax: cmt.tax }

          // cmt_newCommitment_commitment - preimage check

          field cmt_newCommitment_commitment_check_field = poseidon([\
            cmt_stateVarId_field,\
            	 cmt_newCommitment_value.amount,\
	 cmt_newCommitment_value.tax,\
            cmt_newCommitment_owner_publicKey_field,\
            cmt_newCommitment_salt_field\
          ])

          assert(\
            field_to_bool_256(cmt_newCommitment_commitment)[8..256] == field_to_bool_256(cmt_newCommitment_commitment_check_field)[8..256]\
          )

         return true
        