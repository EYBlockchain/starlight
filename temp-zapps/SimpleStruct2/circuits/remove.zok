from "./common/hashes/mimc/altbn254/mimc2.zok" import main as mimc2
from "ecc/babyjubjubParams" import main as curveParams
from "ecc/edwardsScalarMult" import main as scalarMult
from "ecc/edwardsCompress" import main as edwardsCompress
from "utils/pack/bool/pack256.zok" import main as bool_256_to_field
from "utils/pack/bool/nonStrictUnpack256.zok" import main as field_to_bool_256
from "hashes/poseidon/poseidon.zok" import main as poseidon
from "./common/merkle-tree/sparse-merkle-tree/checkproof.zok" import main as checkproof
from "./common/merkle-tree/sparse-merkle-tree/checkproof.zok" import checkUpdatedPath as checkUpdatedPath
from "./common/merkle-tree/mimc/altbn254/verify-membership/height32.zok" import main as checkRoot

struct Rct {
        field amount
field tax
      }

def main(\
	private Rct myrct,\
	private field msgSender,\
	private field total_msgSender_0_oldCommitment_owner_secretKey,\
	private field total_msgSender_1_oldCommitment_owner_secretKey,\
	public field nullifierRoot,\
	public field newNullifierRoot,\
	public field total_msgSender_0_oldCommitment_nullifier,\
	private field[32] total_msgSender_0_nullifier_nonmembershipWitness_siblingPath,\
	private field[32] total_msgSender_0_nullifier_nonmembershipWitness_newsiblingPath,\
	public field total_msgSender_1_oldCommitment_nullifier,\
	private field[32] total_msgSender_1_nullifier_nonmembershipWitness_siblingPath,\
	private field[32] total_msgSender_1_nullifier_nonmembershipWitness_newsiblingPath,\
	private  Rct total_msgSender_0_oldCommitment_value,\
	private field total_msgSender_0_oldCommitment_salt,\
	private  Rct total_msgSender_1_oldCommitment_value,\
	private field total_msgSender_1_oldCommitment_salt,\
	public field commitmentRoot,\
	private field total_msgSender_0_oldCommitment_membershipWitness_index,\
	private field[32] total_msgSender_0_oldCommitment_membershipWitness_siblingPath,\
	private field total_msgSender_1_oldCommitment_membershipWitness_index,\
	private field[32] total_msgSender_1_oldCommitment_membershipWitness_siblingPath,\
	private field total_msgSender_2_newCommitment_owner_publicKey,\
	private field total_msgSender_2_newCommitment_salt,\
	public field total_msgSender_2_newCommitment_commitment,\
	private field cmt_0_oldCommitment_owner_secretKey,\
	private field cmt_1_oldCommitment_owner_secretKey,\
	public field cmt_0_oldCommitment_nullifier,\
	private field[32] cmt_0_nullifier_nonmembershipWitness_siblingPath,\
	private field[32] cmt_0_nullifier_nonmembershipWitness_newsiblingPath,\
	public field cmt_1_oldCommitment_nullifier,\
	private field[32] cmt_1_nullifier_nonmembershipWitness_siblingPath,\
	private field[32] cmt_1_nullifier_nonmembershipWitness_newsiblingPath,\
	private  Rct cmt_0_oldCommitment_value,\
	private field cmt_0_oldCommitment_salt,\
	private  Rct cmt_1_oldCommitment_value,\
	private field cmt_1_oldCommitment_salt,\
	private field cmt_0_oldCommitment_membershipWitness_index,\
	private field[32] cmt_0_oldCommitment_membershipWitness_siblingPath,\
	private field cmt_1_oldCommitment_membershipWitness_index,\
	private field[32] cmt_1_oldCommitment_membershipWitness_siblingPath,\
	private field cmt_2_newCommitment_owner_publicKey,\
	private field cmt_2_newCommitment_salt,\
	public field cmt_2_newCommitment_commitment\
) -> (bool):

        
        // We need to hard-code the mappingId's of mappings into the circuit:
        field total_mappingId = 6


        Rct total_msgSender_0 = total_msgSender_0_oldCommitment_value


        Rct total_msgSender_1 = total_msgSender_1_oldCommitment_value


        // We need to hard-code each stateVarId into the circuit:
        field cmt_0_stateVarId_field = 14


        // We need to hard-code each stateVarId into the circuit:
        field cmt_1_stateVarId_field = 14


        Rct cmt_0 = cmt_0_oldCommitment_value


        Rct cmt_1 = cmt_1_oldCommitment_value


        // We need to hard-code each stateVarId into the circuit:
        field cmt_2_stateVarId_field = 14

// Moved decrementation of total_msg

// Moved decrementation of total_msg

// Moved decrementation of cmt

// Moved decrementation of cmt


        field total_msgSender_0_stateVarId_field = mimc2([total_mappingId, msgSender])


        field total_msgSender_1_stateVarId_field = mimc2([total_mappingId, msgSender])


        field total_msgSender_2_stateVarId_field = mimc2([total_mappingId, msgSender])


        // total_msgSender_0_oldCommitment - PoKoSK:
        // The correctness of this secret key will be constrained within the oldCommitment existence check.

        field[2] total_msgSender_0_oldCommitment_owner_publicKey_point = scalarMult(field_to_bool_256(total_msgSender_0_oldCommitment_owner_secretKey), [curveParams().Gu, curveParams().Gv], curveParams())

        bool total_msgSender_0_oldCommitment_owner_publicKey_sign = edwardsCompress(total_msgSender_0_oldCommitment_owner_publicKey_point)[0]

        bool[254] total_msgSender_0_oldCommitment_yBits = field_to_bool_256(total_msgSender_0_oldCommitment_owner_publicKey_point[1])[2..256]
        total_msgSender_0_oldCommitment_yBits[0] = total_msgSender_0_oldCommitment_owner_publicKey_sign

        field total_msgSender_0_oldCommitment_owner_publicKey = bool_256_to_field([false, false, ...total_msgSender_0_oldCommitment_yBits])


        // total_msgSender_1_oldCommitment - PoKoSK:
        // The correctness of this secret key will be constrained within the oldCommitment existence check.

        field[2] total_msgSender_1_oldCommitment_owner_publicKey_point = scalarMult(field_to_bool_256(total_msgSender_1_oldCommitment_owner_secretKey), [curveParams().Gu, curveParams().Gv], curveParams())

        bool total_msgSender_1_oldCommitment_owner_publicKey_sign = edwardsCompress(total_msgSender_1_oldCommitment_owner_publicKey_point)[0]

        bool[254] total_msgSender_1_oldCommitment_yBits = field_to_bool_256(total_msgSender_1_oldCommitment_owner_publicKey_point[1])[2..256]
        total_msgSender_1_oldCommitment_yBits[0] = total_msgSender_1_oldCommitment_owner_publicKey_sign

        field total_msgSender_1_oldCommitment_owner_publicKey = bool_256_to_field([false, false, ...total_msgSender_1_oldCommitment_yBits])


        // Nullify total_msgSender_0:

        field total_msgSender_0_oldCommitment_nullifier_check_field = poseidon([\
          total_msgSender_0_stateVarId_field,\
          total_msgSender_0_oldCommitment_owner_secretKey,\
          total_msgSender_0_oldCommitment_salt\
        ])

        assert(\
        field_to_bool_256(total_msgSender_0_oldCommitment_nullifier)[8..256] == field_to_bool_256(total_msgSender_0_oldCommitment_nullifier_check_field)[8..256]\
        )
        // total_msgSender_0_oldCommitment_nullifier : non-existence check
        
        assert(\
          nullifierRoot == checkproof(\
            total_msgSender_0_nullifier_nonmembershipWitness_siblingPath,\
            total_msgSender_0_oldCommitment_nullifier\
           )       )

       assert(\
        newNullifierRoot == checkUpdatedPath(\
          total_msgSender_0_nullifier_nonmembershipWitness_newsiblingPath,\
          total_msgSender_0_oldCommitment_nullifier\
        )        )

        


        // Nullify total_msgSender_1:

        field total_msgSender_1_oldCommitment_nullifier_check_field = poseidon([\
          total_msgSender_1_stateVarId_field,\
          total_msgSender_1_oldCommitment_owner_secretKey,\
          total_msgSender_1_oldCommitment_salt\
        ])

        assert(\
        field_to_bool_256(total_msgSender_1_oldCommitment_nullifier)[8..256] == field_to_bool_256(total_msgSender_1_oldCommitment_nullifier_check_field)[8..256]\
        )
        // total_msgSender_1_oldCommitment_nullifier : non-existence check
        
        assert(\
          nullifierRoot == checkproof(\
            total_msgSender_1_nullifier_nonmembershipWitness_siblingPath,\
            total_msgSender_1_oldCommitment_nullifier\
           )       )

       assert(\
        newNullifierRoot == checkUpdatedPath(\
          total_msgSender_1_nullifier_nonmembershipWitness_newsiblingPath,\
          total_msgSender_1_oldCommitment_nullifier\
        )        )

        


          // prepare secret state 'total_msgSender_0' for commitment

          
          
          // total_msgSender_0_oldCommitment_commitment: preimage check

          field total_msgSender_0_oldCommitment_commitment_field = poseidon([\
            total_msgSender_0_stateVarId_field,\
            	 total_msgSender_0_oldCommitment_value.amount,\
	 total_msgSender_0_oldCommitment_value.tax,\
            total_msgSender_0_oldCommitment_owner_publicKey,\
            total_msgSender_0_oldCommitment_salt\
          ])


          // prepare secret state 'total_msgSender_1' for commitment

          
          
          // total_msgSender_1_oldCommitment_commitment: preimage check

          field total_msgSender_1_oldCommitment_commitment_field = poseidon([\
            total_msgSender_1_stateVarId_field,\
            	 total_msgSender_1_oldCommitment_value.amount,\
	 total_msgSender_1_oldCommitment_value.tax,\
            total_msgSender_1_oldCommitment_owner_publicKey,\
            total_msgSender_1_oldCommitment_salt\
          ])


        // total_msgSender_0_oldCommitment_commitment: existence check


        field total_msgSender_0_commitmentRoot_check = checkRoot(\
          total_msgSender_0_oldCommitment_membershipWitness_siblingPath,\
          total_msgSender_0_oldCommitment_commitment_field,\
          total_msgSender_0_oldCommitment_membershipWitness_index\
        )


        assert(\
          field_to_bool_256(commitmentRoot)[8..256] == field_to_bool_256(total_msgSender_0_commitmentRoot_check)[8..256]\
        )


        // total_msgSender_1_oldCommitment_commitment: existence check


        field total_msgSender_1_commitmentRoot_check = checkRoot(\
          total_msgSender_1_oldCommitment_membershipWitness_siblingPath,\
          total_msgSender_1_oldCommitment_commitment_field,\
          total_msgSender_1_oldCommitment_membershipWitness_index\
        )


        assert(\
          field_to_bool_256(commitmentRoot)[8..256] == field_to_bool_256(total_msgSender_1_commitmentRoot_check)[8..256]\
        )


          // prepare secret state 'total_msgSender_2' for commitment

          assert(total_msgSender_0.amount + total_msgSender_1.amount >= myrct.amount)
assert(total_msgSender_0.tax + total_msgSender_1.tax >= myrct.tax)
            // TODO: assert no under/overflows

            Rct total_msgSender_2_newCommitment_value = Rct {  amount: (total_msgSender_0.amount + total_msgSender_1.amount) - myrct.amount, tax: (total_msgSender_0.tax + total_msgSender_1.tax) - myrct.tax }

          // total_msgSender_2_newCommitment_commitment - preimage check

          field total_msgSender_2_newCommitment_commitment_check_field = poseidon([\
            total_msgSender_2_stateVarId_field,\
            	 total_msgSender_2_newCommitment_value.amount,\
	 total_msgSender_2_newCommitment_value.tax,\
            total_msgSender_2_newCommitment_owner_publicKey,\
            total_msgSender_2_newCommitment_salt\
          ])

          assert(\
            field_to_bool_256(total_msgSender_2_newCommitment_commitment)[8..256] == field_to_bool_256(total_msgSender_2_newCommitment_commitment_check_field)[8..256]\
          )


        // cmt_0_oldCommitment - PoKoSK:
        // The correctness of this secret key will be constrained within the oldCommitment existence check.

        field[2] cmt_0_oldCommitment_owner_publicKey_point = scalarMult(field_to_bool_256(cmt_0_oldCommitment_owner_secretKey), [curveParams().Gu, curveParams().Gv], curveParams())

        bool cmt_0_oldCommitment_owner_publicKey_sign = edwardsCompress(cmt_0_oldCommitment_owner_publicKey_point)[0]

        bool[254] cmt_0_oldCommitment_yBits = field_to_bool_256(cmt_0_oldCommitment_owner_publicKey_point[1])[2..256]
        cmt_0_oldCommitment_yBits[0] = cmt_0_oldCommitment_owner_publicKey_sign

        field cmt_0_oldCommitment_owner_publicKey = bool_256_to_field([false, false, ...cmt_0_oldCommitment_yBits])


        // cmt_1_oldCommitment - PoKoSK:
        // The correctness of this secret key will be constrained within the oldCommitment existence check.

        field[2] cmt_1_oldCommitment_owner_publicKey_point = scalarMult(field_to_bool_256(cmt_1_oldCommitment_owner_secretKey), [curveParams().Gu, curveParams().Gv], curveParams())

        bool cmt_1_oldCommitment_owner_publicKey_sign = edwardsCompress(cmt_1_oldCommitment_owner_publicKey_point)[0]

        bool[254] cmt_1_oldCommitment_yBits = field_to_bool_256(cmt_1_oldCommitment_owner_publicKey_point[1])[2..256]
        cmt_1_oldCommitment_yBits[0] = cmt_1_oldCommitment_owner_publicKey_sign

        field cmt_1_oldCommitment_owner_publicKey = bool_256_to_field([false, false, ...cmt_1_oldCommitment_yBits])


        // Nullify cmt_0:

        field cmt_0_oldCommitment_nullifier_check_field = poseidon([\
          cmt_0_stateVarId_field,\
          cmt_0_oldCommitment_owner_secretKey,\
          cmt_0_oldCommitment_salt\
        ])

        assert(\
        field_to_bool_256(cmt_0_oldCommitment_nullifier)[8..256] == field_to_bool_256(cmt_0_oldCommitment_nullifier_check_field)[8..256]\
        )
        // cmt_0_oldCommitment_nullifier : non-existence check
        
        assert(\
          nullifierRoot == checkproof(\
            cmt_0_nullifier_nonmembershipWitness_siblingPath,\
            cmt_0_oldCommitment_nullifier\
           )       )

       assert(\
        newNullifierRoot == checkUpdatedPath(\
          cmt_0_nullifier_nonmembershipWitness_newsiblingPath,\
          cmt_0_oldCommitment_nullifier\
        )        )

        


        // Nullify cmt_1:

        field cmt_1_oldCommitment_nullifier_check_field = poseidon([\
          cmt_1_stateVarId_field,\
          cmt_1_oldCommitment_owner_secretKey,\
          cmt_1_oldCommitment_salt\
        ])

        assert(\
        field_to_bool_256(cmt_1_oldCommitment_nullifier)[8..256] == field_to_bool_256(cmt_1_oldCommitment_nullifier_check_field)[8..256]\
        )
        // cmt_1_oldCommitment_nullifier : non-existence check
        
        assert(\
          nullifierRoot == checkproof(\
            cmt_1_nullifier_nonmembershipWitness_siblingPath,\
            cmt_1_oldCommitment_nullifier\
           )       )

       assert(\
        newNullifierRoot == checkUpdatedPath(\
          cmt_1_nullifier_nonmembershipWitness_newsiblingPath,\
          cmt_1_oldCommitment_nullifier\
        )        )

        


          // prepare secret state 'cmt_0' for commitment

          
          
          // cmt_0_oldCommitment_commitment: preimage check

          field cmt_0_oldCommitment_commitment_field = poseidon([\
            cmt_0_stateVarId_field,\
            	 cmt_0_oldCommitment_value.amount,\
	 cmt_0_oldCommitment_value.tax,\
            cmt_0_oldCommitment_owner_publicKey,\
            cmt_0_oldCommitment_salt\
          ])


          // prepare secret state 'cmt_1' for commitment

          
          
          // cmt_1_oldCommitment_commitment: preimage check

          field cmt_1_oldCommitment_commitment_field = poseidon([\
            cmt_1_stateVarId_field,\
            	 cmt_1_oldCommitment_value.amount,\
	 cmt_1_oldCommitment_value.tax,\
            cmt_1_oldCommitment_owner_publicKey,\
            cmt_1_oldCommitment_salt\
          ])


        // cmt_0_oldCommitment_commitment: existence check


        field cmt_0_commitmentRoot_check = checkRoot(\
          cmt_0_oldCommitment_membershipWitness_siblingPath,\
          cmt_0_oldCommitment_commitment_field,\
          cmt_0_oldCommitment_membershipWitness_index\
        )


        assert(\
          field_to_bool_256(commitmentRoot)[8..256] == field_to_bool_256(cmt_0_commitmentRoot_check)[8..256]\
        )


        // cmt_1_oldCommitment_commitment: existence check


        field cmt_1_commitmentRoot_check = checkRoot(\
          cmt_1_oldCommitment_membershipWitness_siblingPath,\
          cmt_1_oldCommitment_commitment_field,\
          cmt_1_oldCommitment_membershipWitness_index\
        )


        assert(\
          field_to_bool_256(commitmentRoot)[8..256] == field_to_bool_256(cmt_1_commitmentRoot_check)[8..256]\
        )


          // prepare secret state 'cmt_2' for commitment

          assert(cmt_0.amount + cmt_1.amount >= myrct.amount)
assert(cmt_0.tax + cmt_1.tax >= myrct.tax)
            // TODO: assert no under/overflows

            Rct cmt_2_newCommitment_value = Rct {  amount: (cmt_0.amount + cmt_1.amount) - myrct.amount, tax: (cmt_0.tax + cmt_1.tax) - myrct.tax }

          // cmt_2_newCommitment_commitment - preimage check

          field cmt_2_newCommitment_commitment_check_field = poseidon([\
            cmt_2_stateVarId_field,\
            	 cmt_2_newCommitment_value.amount,\
	 cmt_2_newCommitment_value.tax,\
            cmt_2_newCommitment_owner_publicKey,\
            cmt_2_newCommitment_salt\
          ])

          assert(\
            field_to_bool_256(cmt_2_newCommitment_commitment)[8..256] == field_to_bool_256(cmt_2_newCommitment_commitment_check_field)[8..256]\
          )

         return true