from "utils/pack/bool/nonStrictUnpack256.zok" import main as field_to_bool_256
from "hashes/poseidon/poseidon.zok" import main as poseidon
from "./common/hashes/mimc/altbn254/mimc2.zok" import main as mimc2

def main(\
	private field value,\
	private field bucketId,\
	private field a_0_newCommitment_owner_publicKey,\
	private field a_0_newCommitment_salt,\
	public field a_0_newCommitment_commitment,\
	private field buckets_bucketId_0_newCommitment_owner_publicKey,\
	private field buckets_bucketId_0_newCommitment_salt,\
	public field buckets_bucketId_0_newCommitment_commitment\
) -> (bool):

        
        // We need to hard-code each stateVarId into the circuit:
        field a_0_stateVarId_field = 3


        // We need to hard-code the mappingId's of mappings into the circuit:
        field buckets_mappingId = 7

// Skipping incrementation of a

// Skipping incrementation of buckets_bucketId


        // prepare secret state 'a_0' for commitment

        field a_0_newCommitment_value_field = value

        // a_0_newCommitment_commitment - preimage check

        field a_0_newCommitment_commitment_check_field = poseidon([\
          a_0_stateVarId_field,\
          a_0_newCommitment_value_field,\
          a_0_newCommitment_owner_publicKey,\
          a_0_newCommitment_salt\
        ])

        assert(\
          field_to_bool_256(a_0_newCommitment_commitment)[8..256] == field_to_bool_256(a_0_newCommitment_commitment_check_field)[8..256]\
        )


        field buckets_bucketId_0_stateVarId_field = mimc2([buckets_mappingId, bucketId])


        field buckets_bucketId_1_stateVarId_field = mimc2([buckets_mappingId, bucketId])


        // prepare secret state 'buckets_bucketId_0' for commitment

        field buckets_bucketId_0_newCommitment_value_field = value

        // buckets_bucketId_0_newCommitment_commitment - preimage check

        field buckets_bucketId_0_newCommitment_commitment_check_field = poseidon([\
          buckets_bucketId_0_stateVarId_field,\
          buckets_bucketId_0_newCommitment_value_field,\
          buckets_bucketId_0_newCommitment_owner_publicKey,\
          buckets_bucketId_0_newCommitment_salt\
        ])

        assert(\
          field_to_bool_256(buckets_bucketId_0_newCommitment_commitment)[8..256] == field_to_bool_256(buckets_bucketId_0_newCommitment_commitment_check_field)[8..256]\
        )

         return true