// SPDX-License-Identifier: CC0

// TARGET CONTRACT FOR PHASE 2 OF DEVELOPMENT:

pragma solidity ^0.8.0;

import "./Escrow-imports/IERC721.sol";

contract NFT_Escrow {

    secret mapping(uint256 => address) public tokenOwners; // mapped-to by a tokenId
    IERC721 public erc721;

    constructor(address _erc721) {
       erc721 = IERC721(_erc721);
    }

    function deposit(uint256 tokenId) public {
        bool success = erc721.transferFrom(msg.sender, address(this), tokenId);
        require(success == true);
        reinitialisable tokenOwners[tokenId] = msg.sender;
    }

    function transfer(secret address recipient, secret uint256 tokenId) public {
        require(tokenOwners[tokenId] == msg.sender);
        tokenOwners[tokenId] = recipient;
    }

    function withdraw(uint256 tokenId) public {
        require(tokenOwners[tokenId] == msg.sender);
        bool success = erc721.transferFrom(address(this), msg.sender, tokenId);
        require(success, "ERC721 transfer failed");
        tokenOwners[tokenId] = address(0);
    }
}
