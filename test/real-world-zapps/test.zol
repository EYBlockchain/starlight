// SPDX-License-Identifier: CC0

// TARGET CONTRACT FOR PHASE 2 OF DEVELOPMENT:


pragma solidity ^0.8.0;

contract Escrow {

    secret mapping(address => uint256) public balances;
    
    function deposit(address tokenSender, uint256 amountDeposit) public {
        require(tokenSender.reserve()!= address(0));
    tokenSender.moveAndBurn(msg.sender, amountDeposit); 
        balances[msg.sender] += amountDeposit;
    }

    function transfer(secret address tokenReceiver, secret uint256 amount) public {
   
       
        balances[msg.sender] -= amount;
        unknown balances[tokenReceiver] += amount;
    }

    function withdraw(address tokenReceiver, uint256 amountWithdraw) public {
        require(tokenReceiver.reserve()!= address(0));
        tokenReceiver.mint(msg.sender, amountWithdraw);
        balances[msg.sender] -= amountWithdraw;
    }
}
