#!/bin/bash
set -e

GREEN='\033[0;32m'
RED='\033[0;31m'
NC='\033[0m'

while getopts "n:a:m:k:r:s:" arg; do
  case $arg in
    n)
      network=$OPTARG
      echo networkvalue $OPTARG 
      ;;
    a)
      account=$OPTARG
      echo accountvalue $OPTARG
      ;;
    m)
      mnemonic=$OPTARG
      echo mnemonicvalue $OPTARG
      ;;
    k)
      key=$OPTARG
      echo keyvalue $OPTARG
      ;;
    r)
      rpc=$OPTARG
      echo rpcvalue $OPTARG
      ;;
    s)
      setup=$OPTARG
      echo setup $OPTARG
      ;;
  esac
done

cp docker-compose.zapp.override.default.yml docker-compose.zapp.override.yml

cp deploy_default.sh deploy.sh

cp config/default_standard.js config/default.js

cp bin/default_startup bin/startup


rm -rf proving-files

perl -i -pe "s,docker-compose.zapp.yml -f docker-compose.zapp.override.yml,docker-compose.zapp.yml,g" package.json

if [[ $network == 'amoy' ]] || [[ $network == 'sepolia' ]] || [[ $network == 'goerli' ]] || [[ $network == 'cardona' ]]|| [[ $network == 'zkEVM' ]] || [[ $network == 'base-mainnet' ]]
then
perl -i -pe "s,DEFAULT_ACCOUNT: '',DEFAULT_ACCOUNT: \'$account\',g" docker-compose.zapp.override.yml
perl -i -pe "s,DEFAULT_ACCOUNT_MNEMONIC: '',DEFAULT_ACCOUNT_MNEMONIC: \'$mnemonic\',g" docker-compose.zapp.override.yml
perl -i -pe "s,KEY: '',KEY: \'$key\',g" docker-compose.zapp.override.yml
perl -i -pe "s,docker-compose.zapp.yml up,docker-compose.zapp.yml -f docker-compose.zapp.override.yml up,g" bin/startup
perl -i -pe "s,docker-compose.zapp.yml,docker-compose.zapp.yml -f docker-compose.zapp.override.yml,g" package.json
perl -i -pe "s,docker compose -f docker-compose.zapp.yml -f docker-compose.zapp.override.yml up -d ganache, ## up ganache service for ganache,g" bin/startup
perl -i -pe "s,! nc -z localhost 8545,false,g" bin/startup
fi

if [[ $network == 'amoy' ]]
then
perl -i -pe "if (!\$found1 && s/RPC_URL: ''/RPC_URL: 'wss:\/\/polygon-amoy.g.alchemy.com\/v2\/$rpc'/) { \$found1 = 1 }" docker-compose.zapp.override.yml
perl -i -pe "if (!\$found2 && s/RPC_URL: ''/RPC_URL: 'https:\/\/polygon-amoy.g.alchemy.com\/v2\/$rpc'/) { \$found2 = 1 }" docker-compose.zapp.override.yml
perl -i -pe "if (!\$found3 && s/RPC_URL: ''/RPC_URL: 'wss:\/\/polygon-amoy.g.alchemy.com\/v2\/$rpc'/) { \$found3 = 1 }" docker-compose.zapp.override.yml
perl -i -pe "s,migrations/deploy.js,migrations/deploy.js --network amoy,g" deploy.sh
fi


if [[ $network == 'sepolia' ]]
then
perl -i -pe "s,RPC_URL: '',RPC_URL: \'wss://sepolia.infura.io/ws/v3//$rpc\',g" docker-compose.zapp.override.yml
perl -i -pe "s,migrations/deploy.js,migrations/deploy.js --network sepolia,g" deploy.sh
fi

if [[ $network == 'goerli' ]]
then
perl -i -pe "s,RPC_URL: '',RPC_URL: \'wss://goerli.infura.io/ws/v3/$rpc\',g" docker-compose.zapp.override.yml
perl -i -pe "s,migrations/deploy.js,migrations/deploy.js --network goerli,g" deploy.sh
fi

if [[ $network == 'cardona' ]]
then
perl -i -pe "if (!\$found1 && s/RPC_URL: ''/RPC_URL: 'wss:\/\/polygon-zkevm-cardona.blastapi.io\/$rpc'/) { \$found1 = 1 }" docker-compose.zapp.override.yml
perl -i -pe "if (!\$found2 && s/RPC_URL: ''/RPC_URL: 'https:\/\/polygon-zkevm-cardona.blastapi.io\/$rpc'/) { \$found2 = 1 }" docker-compose.zapp.override.yml
perl -i -pe "if (!\$found3 && s/RPC_URL: ''/RPC_URL: 'wss:\/\/polygon-zkevm-cardona.blastapi.io\/$rpc'/) { \$found3 = 1 }" docker-compose.zapp.override.yml
perl -i -pe "s,migrations/deploy.js,migrations/deploy.js --network cardona,g" deploy.sh
perl -i -pe "s,defaultGasPrice: 30000000000,defaultGasPrice: 5,g" config/default.js
fi

if [[ $network == 'zkEVM' ]]
then
perl -i -pe "if (!\$found1 && s/RPC_URL: ''/RPC_URL: 'wss:\/\/polygon-zkevm-mainnet.blastapi.io\/$rpc'/) { \$found1 = 1 }" docker-compose.zapp.override.yml
perl -i -pe "if (!\$found2 && s/RPC_URL: ''/RPC_URL: 'https:\/\/polygon-zkevm-mainnet.blastapi.io\/$rpc'/) { \$found2 = 1 }" docker-compose.zapp.override.yml
perl -i -pe "if (!\$found3 && s/RPC_URL: ''/RPC_URL: 'wss:\/\/polygon-zkevm-mainnet.blastapi.io\/$rpc'/) { \$found3 = 1 }" docker-compose.zapp.override.yml
perl -i -pe "s,migrations/deploy.js,migrations/deploy.js --network zkEVM,g" deploy.sh
perl -i -pe "s,defaultGasPrice: 30000000000,defaultGasPrice: 5,g" config/default.js
fi

if [[ $network == 'base-mainnet' ]]
then
perl -i -pe "if (!\$found1 && s/RPC_URL: ''/RPC_URL: 'wss:\/\/base-mainnet.g.alchemy.com\/v2\/$rpc'/) { \$found1 = 1 }" docker-compose.zapp.override.yml
perl -i -pe "if (!\$found2 && s/RPC_URL: ''/RPC_URL: 'https:\/\/base-mainnet.g.alchemy.com\/v2\/$rpc'/) { \$found2 = 1 }" docker-compose.zapp.override.yml
perl -i -pe "if (!\$found3 && s/RPC_URL: ''/RPC_URL: 'wss:\/\/base-mainnet.g.alchemy.com\/v2\/$rpc'/) { \$found3 = 1 }" docker-compose.zapp.override.yml
perl -i -pe "s,migrations/deploy.js,migrations/deploy.js --network base-mainnet,g" deploy.sh
perl -i -pe "s,defaultGasPrice: 30000000000,//defaultGasPrice: 30000000000,g" config/default.js
fi

if [ ! -d "proving-files" ]; then
  setup='y'
fi

if [[ ! $setup == 'n' ]]
then
printf "\n${GREEN}*** Starting the zokrates container ***${NC}\n"

docker compose -f docker-compose.zapp.yml up -d zokrates

sleep 5

printf "\n${GREEN}*** Running setup for your ZApp... ***${NC}\n"

docker compose -f docker-compose.zapp.yml run zapp-setup node /app/orchestration/common/zkp-setup.mjs -i ''

printf "\n${GREEN}*** Setup complete! Writing verification key to db... ***${NC}\n"

docker compose -f docker-compose.zapp.yml run zapp-setup node /app/write-vk.mjs -i ''

fi
printf "\n${GREEN}*** Finished! ***${NC}\n"
