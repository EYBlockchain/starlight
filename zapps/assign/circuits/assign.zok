from "utils/pack/bool/nonStrictUnpack256.zok" import main as field_to_bool_256
from "utils/pack/bool/pack256.zok" import main as bool_256_to_field
from "utils/pack/u32/unpack256ToBits.zok" import main as u32_8_to_bool_256
from "utils/pack/u32/pack256.zok"  import main as u32_8_to_field
from "./common/merkle-tree/mimc/bn254/verify-membership/height32.zok" import main as checkRoot
from "./common/hashes/sha256/pad256ThenHash.zok" import main as sha256of256
from "./common/hashes/sha256/pad512ThenHash.zok" import main as sha256of512

def main(\
	private field value,\
	private field a_oldCommitment_privateState,\
	private field a_oldCommitment_salt,\
	private field a_oldCommitment_commitment,\
	private field a_oldCommitment_membershipWitness_index,\
	private field a_oldCommitment_membershipWitness_siblingPath,\
	field a_oldCommitment_nullifier,\
	private field a_newCommitment_privateState,\
	private field a_newCommitment_salt,\
	field a_newCommitment_commitment,\
	field commitmentRoot\
) -> ():

	a = value

	assert(\
    	a == a_oldCommitment_privateState\
    )

	assert(\
    	a_oldCommitment_commitment == sha256of512(\
    		[\
    			...a_oldCommitment_privateState,\
    			...a_oldCommitment_salt\
    		]\
    	)\
    )

	field a_oldCommitment_commitment_truncated = bool_256_to_field([...[false; 8], ...u32_8_to_bool_256(a_oldCommitment_commitment)[8..256]])

	field rootCheck = checkRoot(a_oldCommitment_membershipWitness_siblingPath, a_oldCommitment_commitment_truncated, a_oldCommitment_membershipWitness_index)

	assert(field_to_bool_256(nullifier)[8..256] == u32_8_to_bool_256(nullifierCheck)[8..256])

	assert(field_to_bool_256(root)[8..256] == field_to_bool_256(rootCheck)[8..256])

	u32[8] commitmentCheck = sha256of512([...newCommitmentPreimage.a, ...newCommitmentPreimage.salt])

	assert(field_to_bool_256(commitment)[8..256] == u32_8_to_bool_256(commitmentCheck)[8..256])

	return

